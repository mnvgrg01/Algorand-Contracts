#pragma version 8
intcblock 0 1 4 32
bytecblock 0x 0x151f7c75 0x70726f636573735f6964 0x000d41574149545f434f4e4649524d
txn NumAppArgs
intc_0 // 0
==
bnz main_l22
txna ApplicationArgs 0
pushbytes 0x3c35bf14 // "add_asset_listing(asset,uint64,uint64,uint64,uint64,bool)void"
==
bnz main_l21
txna ApplicationArgs 0
pushbytes 0xb720f525 // "get_asset(asset)(uint64,uint64)"
==
bnz main_l20
txna ApplicationArgs 0
pushbytes 0xaca67d86 // "get_listing(address)(uint64,uint64,bool)"
==
bnz main_l19
txna ApplicationArgs 0
pushbytes 0x6c4b70d5 // "get_processid()uint64"
==
bnz main_l18
txna ApplicationArgs 0
pushbytes 0x603d6826 // "purchase_asset(uint64,asset)void"
==
bnz main_l17
txna ApplicationArgs 0
pushbytes 0x891a605b // "get_process_record(uint64)(string,uint64,address,address,uint64)"
==
bnz main_l16
txna ApplicationArgs 0
pushbytes 0x84cae182 // "approve_asset(uint64)void"
==
bnz main_l15
txna ApplicationArgs 0
pushbytes 0xff7dc39d // "mint_asset(string,string)uint64"
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0x2f9779fc // "freeze_asset(asset,uint8,account)void"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0xe00b78a9 // "optin_asset(asset)void"
==
bnz main_l12
err
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 22
load 22
callsub optinasset_10
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 19
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 20
txna ApplicationArgs 3
intc_0 // 0
getbyte
store 21
load 19
load 20
load 21
callsub freezeasset_9
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 16
txna ApplicationArgs 2
store 17
load 16
load 17
callsub mintasset_8
store 18
bytec_1 // 0x151f7c75
load 18
itob
concat
log
intc_1 // 1
return
main_l15:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 15
load 15
callsub approveasset_7
intc_1 // 1
return
main_l16:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 13
load 13
callsub getprocessrecord_6
store 14
bytec_1 // 0x151f7c75
load 14
concat
log
intc_1 // 1
return
main_l17:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
btoi
store 11
txna ApplicationArgs 2
intc_0 // 0
getbyte
store 12
load 11
load 12
callsub purchaseasset_5
intc_1 // 1
return
main_l18:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub getprocessid_4
store 10
bytec_1 // 0x151f7c75
load 10
itob
concat
log
intc_1 // 1
return
main_l19:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
store 8
load 8
callsub getlisting_3
store 9
bytec_1 // 0x151f7c75
load 9
concat
log
intc_1 // 1
return
main_l20:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 6
load 6
callsub getasset_2
store 7
bytec_1 // 0x151f7c75
load 7
concat
log
intc_1 // 1
return
main_l21:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
txna ApplicationArgs 1
intc_0 // 0
getbyte
store 0
txna ApplicationArgs 2
btoi
store 1
txna ApplicationArgs 3
btoi
store 2
txna ApplicationArgs 4
btoi
store 3
txna ApplicationArgs 5
btoi
store 4
txna ApplicationArgs 6
intc_0 // 0
pushint 8 // 8
*
getbit
store 5
load 0
load 1
load 2
load 3
load 4
load 5
callsub addassetlisting_1
intc_1 // 1
return
main_l22:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l24
err
main_l24:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
proto 0 0
bytec_2 // "process_id"
intc_0 // 0
app_global_put
retsub

// add_asset_listing
addassetlisting_1:
proto 6 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
txn Sender
frame_dig -6
txnas Assets
asset_holding_get AssetBalance
store 24
store 23
load 24
// Sender does not have the asset balance.
assert
frame_dig -5
load 23
<=
// Sender does not have enough copies to list
assert
frame_dig -5
itob
frame_dig -4
itob
concat
pushbytes 0x00 // 0x00
intc_0 // 0
frame_dig -1
setbit
concat
frame_bury 0
txn Sender
box_del
pop
txn Sender
frame_dig 0
box_put
frame_dig -6
txnas Assets
frame_bury 5
frame_dig -3
itob
frame_dig -2
itob
concat
frame_bury 6
frame_dig 5
itob
box_del
pop
frame_dig 5
itob
frame_dig 6
box_put
retsub

// get_asset
getasset_2:
proto 1 1
bytec_0 // ""
intc_0 // 0
frame_dig -1
txnas Assets
frame_bury 1
frame_dig 1
itob
box_get
store 26
store 25
load 26
assert
load 25
frame_bury 0
retsub

// get_listing
getlisting_3:
proto 1 1
bytec_0 // ""
frame_dig -1
box_get
store 28
store 27
load 28
assert
load 27
frame_bury 0
retsub

// get_processid
getprocessid_4:
proto 0 1
intc_0 // 0
bytec_2 // "process_id"
app_global_get
frame_bury 0
retsub

// purchase_asset
purchaseasset_5:
proto 2 0
bytec_0 // ""
dupn 2
intc_0 // 0
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
txna Accounts 1
frame_bury 0
frame_dig 0
len
intc_3 // 32
==
assert
txna Accounts 2
frame_bury 1
frame_dig 1
len
intc_3 // 32
==
assert
bytec_3 // 0x000d41574149545f434f4e4649524d
frame_bury 2
frame_dig -1
txnas Assets
frame_bury 3
frame_dig 0
box_len
store 30
store 29
load 30
// Asset is not listed.
assert
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field AssetReceiver
txna Accounts 1
itxn_field AssetSender
frame_dig -2
itxn_field AssetAmount
frame_dig -1
txnas Assets
itxn_field XferAsset
itxn_submit
frame_dig 2
frame_bury 8
frame_dig 8
frame_bury 7
pushint 82 // 82
frame_bury 5
frame_dig 5
itob
extract 6 0
frame_dig 3
itob
concat
frame_dig 0
concat
frame_dig 1
concat
frame_dig -2
itob
concat
frame_dig 7
concat
frame_bury 4
bytec_2 // "process_id"
app_global_get
intc_1 // 1
+
frame_bury 9
frame_dig 9
itob
box_del
pop
frame_dig 9
itob
frame_dig 4
box_put
bytec_2 // "process_id"
frame_dig 9
app_global_put
retsub

// get_process_record
getprocessrecord_6:
proto 1 1
bytec_0 // ""
frame_dig -1
itob
box_get
store 32
store 31
load 32
assert
load 31
frame_bury 0
retsub

// approve_asset
approveasset_7:
proto 1 0
bytec_0 // ""
dupn 2
intc_0 // 0
dup
bytec_0 // ""
bytec_3 // 0x000d41574149545f434f4e4649524d
frame_bury 1
frame_dig -1
itob
box_len
store 34
store 33
load 34
// Process id invalid.
assert
frame_dig -1
itob
box_get
store 36
store 35
load 36
assert
load 35
frame_bury 5
frame_dig 5
frame_dig 5
intc_0 // 0
extract_uint16
dig 1
len
substring3
frame_bury 0
frame_dig 5
extract 42 32
frame_bury 2
frame_dig 5
pushint 74 // 74
extract_uint64
frame_bury 3
frame_dig 5
pushint 2 // 2
extract_uint64
frame_bury 4
frame_dig 2
txna Accounts 1
==
// Receiver address doesn't match.
assert
frame_dig 0
extract 2 0
frame_dig 1
extract 2 0
==
// State does not match
assert
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
txna Accounts 1
itxn_field AssetReceiver
global CurrentApplicationAddress
itxn_field AssetSender
frame_dig 3
itxn_field AssetAmount
frame_dig 4
itxn_field XferAsset
itxn_submit
frame_dig -1
itob
box_del
pop
retsub

// mint_asset
mintasset_8:
proto 2 1
intc_0 // 0
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
intc_1 // 1
itxn_field ConfigAssetTotal
intc_1 // 1
itxn_field ConfigAssetDefaultFrozen
intc_0 // 0
itxn_field ConfigAssetDecimals
frame_dig -2
extract 2 0
itxn_field ConfigAssetUnitName
frame_dig -2
extract 2 0
itxn_field ConfigAssetName
frame_dig -1
extract 2 0
itxn_field ConfigAssetURL
global CurrentApplicationAddress
itxn_field ConfigAssetManager
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
global CurrentApplicationAddress
itxn_field ConfigAssetFreeze
global CurrentApplicationAddress
itxn_field ConfigAssetClawback
itxn_submit
itxn CreatedAssetID
frame_bury 0
retsub

// freeze_asset
freezeasset_9:
proto 3 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
itxn_begin
pushint 5 // afrz
itxn_field TypeEnum
frame_dig -3
txnas Assets
itxn_field FreezeAsset
frame_dig -1
txnas Accounts
itxn_field FreezeAssetAccount
frame_dig -2
itxn_field FreezeAssetFrozen
itxn_submit
retsub

// optin_asset
optinasset_10:
proto 1 0
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
global CurrentApplicationAddress
itxn_field AssetReceiver
frame_dig -1
txnas Assets
itxn_field XferAsset
intc_0 // 0
itxn_field AssetAmount
itxn_submit
retsub